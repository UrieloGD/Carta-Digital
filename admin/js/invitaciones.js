// Invitaciones específico
let currentInvitationId = null;

document.addEventListener('DOMContentLoaded', function() {
    initInvitations();
    setupInvitationForm();
    setupSlugGeneration();
});

function initInvitations() {
    // Configurar tooltips para los botones de acción
    const actionButtons = document.querySelectorAll('.btn-icon');
    actionButtons.forEach(button => {
        button.addEventListener('mouseenter', showTooltip);
        button.addEventListener('mouseleave', hideTooltip);
    });
}

function showTooltip(event) {
    const button = event.target;
    const title = button.getAttribute('title');
    if (title) {
        // Crear tooltip
        const tooltip = document.createElement('div');
        tooltip.className = 'tooltip';
        tooltip.textContent = title;
        tooltip.style.cssText = `
            position: absolute;
            background: #333;
            color: white;
            padding: 0.5rem;
            border-radius: 4px;
            font-size: 0.8rem;
            z-index: 1000;
            pointer-events: none;
        `;
        
        document.body.appendChild(tooltip);
        
        const rect = button.getBoundingClientRect();
        tooltip.style.left = rect.left + (rect.width / 2) - (tooltip.offsetWidth / 2) + 'px';
        tooltip.style.top = rect.top - tooltip.offsetHeight - 5 + 'px';
        
        button._tooltip = tooltip;
    }
}

function hideTooltip(event) {
    const button = event.target;
    if (button._tooltip) {
        document.body.removeChild(button._tooltip);
        button._tooltip = null;
    }
}

function openInvitationModal(invitationId = null) {
    currentInvitationId = invitationId;
    const modal = document.getElementById('invitationModal');
    const title = document.getElementById('invitationModalTitle');
    const form = document.getElementById('invitationForm');
    
    if (invitationId) {
        title.textContent = 'Editar Invitación';
        loadInvitationData(invitationId);
    } else {
        title.textContent = 'Nueva Invitación';
        form.reset();
    }
    
    modal.classList.add('active');
    document.body.style.overflow = 'hidden';
}

function closeInvitationModal() {
    const modal = document.getElementById('invitationModal');
    modal.classList.remove('active');
    document.body.style.overflow = '';
    currentInvitationId = null;
}

function loadInvitationData(invitationId) {
    // Simular carga de datos
    const invitationData = {
        tipo_evento: 'boda',
        plantilla: '1',
        pareja: 'Ana & Carlos',
        fecha: '2025-08-15T18:00',
        lugar: 'Iglesia San José',
        enlace: 'ana-carlos-2025',
        mensaje: 'Los esperamos en nuestro día especial'
    };
    
    Object.keys(invitationData).forEach(key => {
        const field = document.querySelector(`[name="${key}"]`);
        if (field) {
            field.value = invitationData[key];
        }
    });
}

function setupInvitationForm() {
    const form = document.getElementById('invitationForm');
    
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        if (validateInvitationForm()) {
            saveInvitation();
        }
    });
}

function setupSlugGeneration() {
    const coupleNameField = document.getElementById('coupleName');
    const slugField = document.getElementById('invitationSlug');
    
    coupleNameField.addEventListener('input', function() {
        const slug = generateSlug(this.value);
        if (slugField.value === '' || slugField.dataset.autoGenerated === 'true') {
            slugField.value = slug;
            slugField.dataset.autoGenerated = 'true';
        }
    });
    
    slugField.addEventListener('input', function() {
        this.dataset.autoGenerated = 'false';
    });
}

function generateSlug(text) {
    return text
        .toLowerCase()
        .replace(/[áàäâ]/g, 'a')
        .replace(/[éèëê]/g, 'e')
        .replace(/[íìïî]/g, 'i')
        .replace(/[óòöô]/g, 'o')
        .replace(/[úùüû]/g, 'u')
        .replace(/ñ/g, 'n')
        .replace(/[^a-z0-9\s]/g, '')
        .replace(/\s+/g, '-')
        .replace(/-+/g, '-')
        .trim('-');
}

function validateInvitationForm() {
    const requiredFields = ['tipo_evento', 'plantilla', 'pareja', 'fecha', 'lugar'];
    
    for (let field of requiredFields) {
        const element = document.querySelector(`[name="${field}"]`);
        if (!element.value.trim()) {
            showNotification(`Por favor completa el campo: ${field.replace('_', ' ')}`, 'error');
            element.focus();
            return false;
        }
    }
    
    // Validar formato de fecha
    const dateField = document.querySelector('[name="fecha"]');
    const selectedDate = new Date(dateField.value);
    const today = new Date();
    
    if (selectedDate <= today) {
        showNotification('La fecha del evento debe ser futura', 'error');
        dateField.focus();
        return false;
    }
    
    return true;
}

function saveInvitation() {
    const formData = new FormData(document.getElementById('invitationForm'));
    
    // Simular guardado
    showNotification('Invitación guardada exitosamente', 'success');
    closeInvitationModal();
    
    // Simular actualización de la tabla
    setTimeout(() => {
        location.reload();
    }, 1000);
}

function viewInvitation(invitationId) {
    // Abrir en nueva pestaña
    window.open(`../invitacion.php?id=${invitationId}`, '_blank');
}

function editInvitation(invitationId) {
    openInvitationModal(invitationId);
}

function deleteInvitation(invitationId) {
    if (confirm('¿Estás seguro de que quieres eliminar esta invitación? Esta acción no se puede deshacer.')) {
        // Simular eliminación
        showNotification('Invitación eliminada exitosamente', 'success');
        
        setTimeout(() => {
            location.reload();
        }, 1000);
    }
}

// Función de notificación reutilizable
function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.textContent = message;
    
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${type === 'success' ? '#d4edda' : type === 'error' ? '#f8d7da' : '#d1ecf1'};
        color: ${type === 'success' ? '#155724' : type === 'error' ? '#721c24' : '#0c5460'};
        padding: 1rem 1.5rem;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        z-index: 10000;
        animation: slideIn 0.3s ease;
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.style.animation = 'slideOut 0.3s ease';
        setTimeout(() => {
            if (document.body.contains(notification)) {
                document.body.removeChild(notification);
            }
        }, 300);
    }, 3000);
}

// Event listeners globales
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        closeInvitationModal();
    }
});

document.getElementById('invitationModal').addEventListener('click', function(e) {
    if (e.target === this) {
        closeInvitationModal();
    }
});